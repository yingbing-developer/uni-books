<template>
	<view class="catalog" @touchmove.stop.prevent="" v-if="isShow">
		<view class="mask" @tap.stop="hide" :style="{opacity: opac}"></view>
		<view class="popup" :style="{'background-color': skinColor.menuBgColor, transform: 'translateX(' + lateY + ')'}">
			<block v-if="catalog.length > 0">
				<view class="title" :style="{color: skinColor.titleColor}">
					<text class="title-text">{{title}}</text>
					<text class="clear" v-if="showClear">清空</text>
				</view>
				<scroll-view class="scroll-view" scroll-y="true" :scroll-into-view="'catalog_' + scrollTo" v-if="ready">
					<view
					class="list actived"
					:id="'catalog_' + index"
					v-for="(item, index) in catalog"
					:class="{catalog_actived: scrollTo == index}"
					:key='index'
					:style="{color: skinColor.menuTitleColor}"
					@tap="selectCatalog(item.index)">
						{{item.title}}
					</view>
				</scroll-view>
			</block>
			<view class="scroll-view" v-else>
				<view class="nocata" :style="{color: skinColor.menuTitleColor}">
					暂无{{title}}
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import { skinMixin } from '@/common/mixin/index.js'
	import { indexOf } from '@/common/js/util.js'
	import { mapGetters, mapMutations } from 'vuex'
	export default {
		mixins: [skinMixin],
		props: {
			catalog: {
				type: Array,
				default () {
					return new Array();
				}
			},
			path: {
				type: String,
				default: ''
			},
			title: {
				type: String,
				default: ''
			},
			showClear: {
				type: Boolean,
				default: false
			}
		},
		data () {
			return {
				isShow: false,
				lateY: '100%',
				opac: 0,
				ready: false
			}
		},
		computed: {
			...mapGetters(['bookList']),
			bookInfo () {
				return this.bookList[indexOf(this.bookList, this.path, 'path')];
			},
			scrollTo () {
				for ( let i in this.catalog ) {
					if ( i < this.catalog.length - 1 ) {
						if ( this.bookInfo.record >= this.catalog[i].index && this.bookInfo.record < this.catalog[parseInt(i) + 1].index ) {
							return i
						}
					} else {
						if ( this.bookInfo.record >= this.catalog[i].index) {
							return i
						}
					}
				}
			}
		},
		methods: {
			...mapMutations(['updateBookRecord']),
			show () {
				this.isShow = true;
				setTimeout(() => {
					this.lateY = 0;
					this.opac = 0.4;
					setTimeout(() => {
						this.ready = true;
					}, 320)
				}, 20)
			},
			hide () {
				this.lateY = '100%';
				this.opac = 0;
				this.ready = false;
				setTimeout(() => {
					this.isShow = false;
				}, 300)
			},
			//跳往章节
			selectCatalog (index) {
				this.updateBookRecord({
					path: this.path,
					record: index
				});
			}
		}
	}
</script>

<style scoped>
	.catalog {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
	.mask {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: #000000;
		transition: opacity .3s;
	}
	.popup {
		position: absolute;
		right: 0;
		top: 0;
		bottom: 0;
		width: 400rpx;
		display: flex;
		flex-direction: column;
		transition: transform .3s;
	}
	.title {
		padding: 40rpx 10rpx;
		display: flex;
		justify-content: space-between;
	}
	.title-text {
		font-size: 35rpx;
	}
	.clear {
		color: #DD524D;
		font-size: 25rpx;
		margin-right: 10rpx;
	}
	.scroll-view {
		flex: 1;
		overflow: hidden;
	}
	.list {
		padding: 15rpx 10rpx;
		font-size: 28rpx;
	}
	.catalog_actived {
		color: #DD524D!important;
	}
	.nocata {
		height: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 28rpx;
	}
</style>
