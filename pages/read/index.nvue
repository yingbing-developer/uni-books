<template>
	<view class="read" :style="{'background-color': skinColor.readBackColor}">
		<nav-bar :bgColor="skinColor.readBackColor" title="第一章 杉杉苑" :titleColor="skinColor.readTextColor" :backColor="skinColor.readTextColor">
		</nav-bar>
		<view class="list-view">
			<list>
				<cell>
					<view class="content">
						<text class="content-text" :style="{'font-size': readMode.fontSize + 'px', 'line-height': lineHeight + 'px', color: skinColor.readTextColor}">{{bookContent}}</text>
					</view>
				</cell>
			</list>
			<view class="touchBoard">
				<view class="touch-box touch-left"></view>
				<view class="touch-box touch-center">
					<view class="touch-item" @tap="$refs.readSetting.show()"></view>
				</view>
				<view class="touch-box touch-right"></view>
			</view>
		</view>
		<read-setting ref="readSetting"></read-setting>
	</view>
</template>

<script>
	import { mapGetters } from 'vuex'
	import { skinMixin } from '@/common/mixin/index.js'
	import ReadSetting from './setting.nvue'
	export default {
		mixins: [skinMixin],
		data () {
			return {
				bookContent: '魔化降低撒降低加上\r\n大家级撒就嗲机电技术'
			}
		},
		computed: {
			...mapGetters(['readMode']),
			path () {
				const pages = getCurrentPages();
				const page = pages[pages.length - 1];
				return page.options.path;
			},
			lineHeight () {
				return this.readMode.fontSize + 15;
			}
		},
		created () {
			this.getContent();
		},
		methods: {
			// getContent () {
			// 	let ReadTxt = plus.android.importClass('com.itstudy.io.GetText');
			// 	let readTxt = new ReadTxt();
			// 	this.bookContent = readTxt.getTextFromText(plus.io.convertLocalFileSystemURL(this.path));
			// }
			getContent () {
				plus.io.resolveLocalFileSystemURL('file://' + this.path, ( entry ) => {
					entry.file( ( file ) => {
						let reader = new plus.io.FileReader();
						reader.onloadend = ( e ) => {
							this.bookContent = e.target.result;
						};
						reader.readAsText( file, 'gb2312' );
					}, ( fail ) => {
						console.log("Request file system failed: " + fail.message);
					});
				}, ( fail ) => {
					console.log( "Request file system failed: " + fail.message );
				});
			}
		},
		components: {
			ReadSetting
		}
	}
</script>

<style scoped>
	.nav-center {
		flex: 1;
		align-items: center;
		justify-content: center;
	}
	.content {
		padding: 5px 20px;
	}
	.web {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
	.list-view {
		flex: 1;
		position: relative;
	}
	.touchBoard {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		flex-direction: row;
	}
	.touch-box  {
		justify-content: center;
	}
	.touch-left {
		flex: 1;
	}
	.touch-right {
		flex: 1;
	}
	.touch-center {
		width: 300rpx;
	}
	.touch-item {
		height: 400rpx;
	}
</style>
